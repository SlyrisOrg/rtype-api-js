"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.userCreateController=exports.userUpdateController=exports.userFetchController=undefined;var _signin=require("./signin");var _signin2=_interopRequireDefault(_signin);var _signup=require("./signup");var _signup2=_interopRequireDefault(_signup);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const userFetchController=exports.userFetchController=({database})=>async(req,res,next)=>{try{const data=await database.getUserData(req.user);res.success({content:data})}catch(err){res.render("error",err)}};const userUpdateController=exports.userUpdateController=({database,verifier})=>async(req,res,next)=>{const errors=verifier(req.body);if(errors.length){throw errors[0]}try{await database.updateUserData(req.user,req.body);res.success()}catch(err){res.render("error",err)}};const userCreateController=exports.userCreateController=({verifier,database})=>async(req,res,next)=>{const errors=verifier(req.body);if(errors.length){throw errors[0]}try{await database.createUserData(req.user,req.body);res.success()}catch(err){res.render("error",err)}};const verifyTokenMiddleware=({jwt},configs)=>async(req,res,next)=>{try{const token=req.get("Authorization").substring(4);const data=await jwt.verify(token,configs.server.secret);if(!data||!data._id){throw configs.message.unvalidToken.payload}req.user=data._id;next()}catch(err){res.render("error",err)}};exports.default=(deps,configs)=>router=>{router.get("/",verifyTokenMiddleware(deps,configs),userFetchController(deps,configs));router.put("/",verifyTokenMiddleware(deps,configs),userUpdateController(deps,configs));router.post("/",verifyTokenMiddleware(deps,configs),userCreateController(deps,configs));router.post("/signin",(0,_signin2.default)(deps,configs));router.post("/signup",(0,_signup2.default)(deps,configs));return router};